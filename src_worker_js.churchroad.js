/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var churchroad;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/worker.js":
/*!***********************!*\
  !*** ./src/worker.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _yowasp_yosys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @yowasp/yosys */ \"../yowasp-yosys/npmjs/gen/bundle.js\");\n\n\nawait (0,_yowasp_yosys__WEBPACK_IMPORTED_MODULE_0__.runYosys)();\n\nasync function work() {\n  // Set callback to handle messages passed to the worker.\n  self.onmessage = async ({ data: data }) => {\n    let outFiles = (0,_yowasp_yosys__WEBPACK_IMPORTED_MODULE_0__.runYosys)(\n      [\"-q\", \"-p\", \"read_verilog test.v; prep; write_lakeroad test.egg\"],\n      { \"test.v\": data },\n      { synchronously: true });\n    self.postMessage(outFiles['test.egg']);\n  };\n}\n\nwork()\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);\n\n//# sourceURL=webpack://churchroad/./src/worker.js?");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = fs/promises;

/***/ }),

/***/ "../yowasp-yosys/npmjs/gen/bundle.js":
/*!*******************************************!*\
  !*** ../yowasp-yosys/npmjs/gen/bundle.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Exit: () => (/* binding */ Exit),\n/* harmony export */   commands: () => (/* binding */ commands),\n/* harmony export */   runYosys: () => (/* binding */ runYosys)\n/* harmony export */ });\n// node_modules/@yowasp/runtime/lib/fetch.js\nvar fetch;\nif (typeof process === \"object\" && process.release?.name === \"node\") {\n  fetch = async function(url, options) {\n    if (url.protocol === \"file:\") {\n      const { readFile } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! fs/promises */ \"fs/promises\", 19));\n      let contentType = \"application/octet-stream\";\n      if (url.pathname.endsWith(\".wasm\"))\n        contentType = \"application/wasm\";\n      return new Response(await readFile(url), { headers: { \"Content-Type\": contentType } });\n    } else {\n      return globalThis.fetch(url, options);\n    }\n  };\n} else {\n  fetch = globalThis.fetch;\n}\nvar fetch_default = fetch;\n\n// node_modules/@yowasp/runtime/lib/wasi-virt.js\nvar Exit = class extends Error {\n  constructor(code = 0) {\n    super(`Exited with status ${code}`);\n    this.code = code;\n  }\n};\nfunction monotonicNow() {\n  return BigInt(Math.floor(performance.now() * 1e6));\n}\nfunction wallClockNow() {\n  let now = Date.now();\n  const seconds = BigInt(Math.floor(now / 1e3));\n  const nanoseconds = now % 1e3 * 1e6;\n  return { seconds, nanoseconds };\n}\nvar Xoroshiro128StarStar = class {\n  constructor(seed) {\n    if (BigInt(seed) === 0n) {\n      throw new Error(\"xoroshiro128** must be seeded with a non-zero state\");\n    }\n    this.s = [BigInt(seed) & 0xffffffffffffffffn, BigInt(seed) >> 64n & 0xffffffffffffffffn];\n  }\n  next() {\n    function trunc64(x) {\n      return x & 0xffffffffffffffffn;\n    }\n    function rotl(x, k) {\n      return x << k | x >> 64n - k;\n    }\n    let [s0, s1] = this.s;\n    const r = trunc64(rotl(s0 * 5n, 7n) * 9n);\n    s1 ^= s0;\n    s0 = trunc64(rotl(s0, 24n) ^ s1 ^ s1 << 16n);\n    s1 = trunc64(rotl(s1, 37n));\n    this.s = [s0, s1];\n    return r;\n  }\n  getBytes(length) {\n    return Uint8Array.from({ length }, () => Number(BigInt.asUintN(8, this.next() >> 32n)));\n  }\n};\nvar IoError = class extends Error {\n};\nvar InputStream = class {\n  read(_len) {\n    throw { tag: \"closed\" };\n  }\n  blockingRead(len) {\n    return this.read(len);\n  }\n};\nvar OutputStream = class {\n  checkWrite() {\n    throw { tag: \"closed\" };\n  }\n  write(_contents) {\n    this.checkWrite();\n  }\n  flush() {\n  }\n  blockingFlush() {\n    this.flush();\n  }\n  blockingWriteAndFlush(contents) {\n    this.write(contents);\n    this.blockingFlush();\n  }\n};\nvar CallbackInputStream = class extends InputStream {\n  constructor(callback = null) {\n    super();\n    this.callback = callback;\n  }\n  read(len) {\n    if (this.callback === null)\n      throw { tag: \"closed\" };\n    let contents = this.callback(Number(len));\n    if (contents === null)\n      throw { tag: \"closed\" };\n    return contents;\n  }\n};\nvar CallbackOutputStream = class extends OutputStream {\n  constructor(callback = null) {\n    super();\n    this.callback = callback;\n  }\n  checkWrite() {\n    return 4096;\n  }\n  write(contents) {\n    if (this.callback !== null)\n      this.callback(contents);\n  }\n  flush() {\n    if (this.callback !== null)\n      this.callback(null);\n  }\n};\nvar TerminalInput = class {\n};\nvar TerminalOutput = class {\n};\nvar File = class {\n  constructor(data = \"\") {\n    if (data instanceof Uint8Array) {\n      this.data = data;\n    } else if (typeof data === \"string\") {\n      this.data = new TextEncoder().encode(data);\n    } else {\n      throw new Error(`Cannot construct a file from ${typeof data}`);\n    }\n  }\n  get size() {\n    return this.data.length;\n  }\n};\nvar ReadStream = class extends InputStream {\n  constructor(file, offset) {\n    super();\n    this.file = file;\n    this.offset = offset;\n  }\n  read(len) {\n    const data = this.file.data.subarray(Number(this.offset), Number(this.offset + len));\n    this.offset += len;\n    return data;\n  }\n};\nvar WriteStream = class extends OutputStream {\n  constructor(file, offset) {\n    super();\n    this.file = file;\n    this.offset = offset;\n  }\n  write(contents) {\n    const newData = new Uint8Array(this.file.data.length + contents.length);\n    newData.set(this.file.data);\n    newData.subarray(Number(this.offset)).set(contents);\n    this.file.data = newData;\n    this.offset += BigInt(contents.length);\n  }\n};\nvar Directory = class _Directory {\n  constructor(files = {}) {\n    this.files = files;\n  }\n  get size() {\n    return Object.keys(this.files).length;\n  }\n  traverse(path, flags = { create: false, remove: false }) {\n    let entry = this;\n    let separatorAt = -1;\n    do {\n      if (entry instanceof File)\n        throw \"not-directory\";\n      const files = entry.files;\n      separatorAt = path.indexOf(\"/\");\n      const segment = separatorAt === -1 ? path : path.substring(0, separatorAt);\n      if (separatorAt === -1 && flags.remove)\n        delete files[segment];\n      else if (segment === \"\" || segment === \".\")\n        ;\n      else if (segment === \"..\")\n        ;\n      else if (Object.hasOwn(files, segment))\n        entry = files[segment];\n      else if (flags.create === \"directory\" || flags.create === \"file\" && separatorAt !== -1)\n        entry = files[segment] = new _Directory({});\n      else if (flags.create === \"file\")\n        entry = files[segment] = new File(new Uint8Array());\n      else\n        throw \"no-entry\";\n      path = path.substring(separatorAt + 1);\n    } while (separatorAt !== -1);\n    return entry;\n  }\n};\nvar Descriptor = class _Descriptor {\n  constructor(entry) {\n    this.entry = entry;\n  }\n  getType() {\n    if (this.entry instanceof Directory)\n      return \"directory\";\n    if (this.entry instanceof File)\n      return \"regular-file\";\n  }\n  getFlags() {\n    return {};\n  }\n  metadataHash() {\n    return { upper: 0, lower: 0 };\n  }\n  metadataHashAt(_pathFlags, path) {\n    if (!(this.entry instanceof Directory))\n      throw \"invalid\";\n    const pathEntry = this.entry.traverse(path);\n    return new _Descriptor(pathEntry).metadataHash();\n  }\n  stat() {\n    let type;\n    if (this.entry instanceof Directory)\n      type = \"directory\";\n    if (this.entry instanceof File)\n      type = \"regular-file\";\n    return {\n      type,\n      linkCount: 1,\n      size: this.entry.size,\n      dataAccessTimestamp: null,\n      dataModificationTimestamp: null,\n      statusChangeTimestamp: null\n    };\n  }\n  statAt(_pathFlags, path) {\n    if (!(this.entry instanceof Directory))\n      throw \"invalid\";\n    const pathEntry = this.entry.traverse(path);\n    return new _Descriptor(pathEntry).stat();\n  }\n  openAt(_pathFlags, path, openFlags, _descriptorFlags) {\n    if (!(this.entry instanceof Directory))\n      throw \"invalid\";\n    const openEntry = this.entry.traverse(path, { create: openFlags.create ? \"file\" : false });\n    if (openFlags.directory) {\n      if (!(openEntry instanceof Directory))\n        throw \"not-directory\";\n    } else {\n      if (openEntry instanceof Directory)\n        throw \"is-directory\";\n      if (openFlags.truncate)\n        openEntry.data = new Uint8Array();\n    }\n    return new _Descriptor(openEntry);\n  }\n  read(length, offset) {\n    if (this.entry instanceof Directory)\n      throw \"is-directory\";\n    [length, offset] = [Number(length), Number(offset)];\n    return [this.entry.data.subarray(offset, offset + length), offset + length >= this.entry.data.byteLength];\n  }\n  readViaStream(offset) {\n    return new ReadStream(this.entry, offset);\n  }\n  write(_buffer, _offset) {\n    if (this.entry instanceof Directory)\n      throw \"is-directory\";\n    console.error(\"Descriptor.write not implemented\");\n    throw \"unsupported\";\n  }\n  writeViaStream(offset) {\n    return new WriteStream(this.entry, offset);\n  }\n  readDirectory() {\n    return new DirectoryEntryStream(this.entry);\n  }\n  createDirectoryAt(path) {\n    this.entry.traverse(path, { create: \"directory\" });\n  }\n  unlinkFileAt(path) {\n    const pathEntry = this.entry.traverse(path);\n    if (pathEntry instanceof Directory)\n      return \"is-directory\";\n    this.entry.traverse(path, { remove: true });\n  }\n  removeDirectoryAt(path) {\n    const pathEntry = this.entry.traverse(path);\n    if (!(pathEntry instanceof Directory))\n      return \"not-directory\";\n    this.entry.traverse(path, { remove: true });\n  }\n};\nvar DirectoryEntryStream = class {\n  constructor(directory) {\n    this.entries = Object.entries(directory.files);\n    this.index = 0;\n  }\n  readDirectoryEntry() {\n    if (this.index === this.entries.length)\n      return null;\n    const [name, entry] = this.entries[this.index++];\n    let type;\n    if (entry instanceof Directory)\n      type = \"directory\";\n    if (entry instanceof File)\n      type = \"regular-file\";\n    return { name, type };\n  }\n};\nfunction directoryFromTree(tree) {\n  const files = {};\n  for (const [filename, data] of Object.entries(tree)) {\n    if (typeof data === \"string\" || data instanceof Uint8Array)\n      files[filename] = new File(tree[filename]);\n    else\n      files[filename] = directoryFromTree(tree[filename]);\n  }\n  return new Directory(files);\n}\nfunction directoryIntoTree(directory, { decodeASCII = true } = {}) {\n  function isASCII(buffer) {\n    for (const byte of buffer)\n      if (byte < 32 && byte !== 9 && byte !== 10 && byte !== 13 || byte >= 127)\n        return false;\n    return true;\n  }\n  const tree = {};\n  for (const [filename, entry] of Object.entries(directory.files)) {\n    if (entry instanceof File)\n      tree[filename] = decodeASCII && isASCII(entry.data) ? new TextDecoder().decode(entry.data) : entry.data;\n    if (entry instanceof Directory)\n      tree[filename] = directoryIntoTree(entry, { decodeASCII });\n  }\n  return tree;\n}\nvar Environment = class {\n  vars = {};\n  args = [];\n  root = new Directory({});\n  constructor() {\n    this.prng = new Xoroshiro128StarStar(1n);\n    this.standardInputStream = new CallbackInputStream();\n    this.standardOutputStream = new CallbackOutputStream();\n    this.standardErrorStream = new CallbackOutputStream();\n    this.terminalInput = new TerminalInput();\n    this.terminalOutput = new TerminalOutput();\n    const $this = this;\n    this.exports = {\n      monotonicClock: {\n        now: monotonicNow\n      },\n      wallClock: {\n        now: wallClockNow\n      },\n      random: {\n        getRandomBytes(length) {\n          return $this.prng.getBytes(Number(length));\n        }\n      },\n      io: {\n        Error: IoError,\n        InputStream,\n        OutputStream\n      },\n      cli: {\n        exit(status) {\n          throw new Exit(status.tag === \"ok\" ? 0 : 1);\n        },\n        getEnvironment() {\n          return $this.vars;\n        },\n        getArguments() {\n          return $this.args;\n        },\n        getStdin() {\n          return $this.standardInputStream;\n        },\n        getStdout() {\n          return $this.standardOutputStream;\n        },\n        getStderr() {\n          return $this.standardErrorStream;\n        },\n        getTerminalStdin() {\n          return $this.terminalInput;\n        },\n        getTerminalStdout() {\n          return $this.terminalOutput;\n        },\n        getTerminalStderr() {\n          return $this.terminalOutput;\n        },\n        TerminalInput,\n        TerminalOutput\n      },\n      fs: {\n        Descriptor,\n        DirectoryEntryStream,\n        filesystemErrorCode() {\n        },\n        getDirectories() {\n          if ($this.root === null)\n            return [];\n          return [[new Descriptor($this.root), \"/\"]];\n        }\n      }\n    };\n  }\n  get stdin() {\n    return this.standardInputStream.callback;\n  }\n  set stdin(callback) {\n    this.standardInputStream.callback = callback;\n  }\n  get stdout() {\n    return this.standardOutputStream.callback;\n  }\n  set stdout(callback) {\n    this.standardOutputStream.callback = callback;\n  }\n  get stderr() {\n    return this.standardErrorStream.callback;\n  }\n  set stderr(callback) {\n    this.standardErrorStream.callback = callback;\n  }\n};\n\n// node_modules/@yowasp/runtime/lib/util.js\nfunction lineBuffered(processLine) {\n  let buffer = new Uint8Array();\n  return (bytes) => {\n    if (bytes === null)\n      return;\n    let newBuffer = new Uint8Array(buffer.length + bytes.length);\n    newBuffer.set(buffer);\n    newBuffer.set(bytes, buffer.length);\n    buffer = newBuffer;\n    let newlineAt = -1;\n    while (true) {\n      const nextNewlineAt = buffer.indexOf(10, newlineAt + 1);\n      if (nextNewlineAt === -1)\n        break;\n      processLine(new TextDecoder().decode(buffer.subarray(newlineAt + 1, nextNewlineAt)));\n      newlineAt = nextNewlineAt;\n    }\n    buffer = buffer.subarray(newlineAt + 1);\n  };\n}\n\n// node_modules/@yowasp/runtime/lib/api.js\nasync function fetchObject(obj, fetchFn) {\n  const promises = [];\n  for (const [key, value] of Object.entries(obj)) {\n    if (typeof value === \"string\" || value instanceof Uint8Array) {\n      promises.push(Promise.resolve([key, value]));\n    } else if (value instanceof URL) {\n      promises.push(fetchFn(value).then((fetched) => [key, fetched]));\n    } else {\n      promises.push(fetchObject(value, fetchFn).then((fetched) => [key, fetched]));\n    }\n  }\n  for (const [key, value] of await Promise.all(promises))\n    obj[key] = value;\n  return obj;\n}\nfunction fetchWebAssembly(url) {\n  return fetch_default(url).then(WebAssembly.compileStreaming);\n}\nfunction fetchUint8Array(url) {\n  return fetch_default(url).then((resp) => resp.arrayBuffer()).then((buf) => new Uint8Array(buf));\n}\nfunction fetchResources({ modules, filesystem }) {\n  return Promise.all([\n    fetchObject(modules, fetchWebAssembly),\n    fetchObject(filesystem, fetchUint8Array)\n  ]).then(([modules2, filesystem2]) => {\n    return { modules: modules2, filesystem: filesystem2 };\n  });\n}\nvar Application = class {\n  constructor(resources, instantiate2, argv0) {\n    this.resources = resources;\n    this.resourceData = null;\n    this.instantiate = instantiate2;\n    this.argv0 = argv0;\n  }\n  async preload() {\n    if (this.resourceData === null)\n      this.resourceData = await this.resources().then(fetchResources);\n  }\n  // The `printLine` option is deprecated and not documented but still accepted for compatibility.\n  execute(args, files = {}, { stdin, stdout, stderr, decodeASCII = true, printLine } = {}) {\n    const environment = new Environment();\n    environment.args = [this.argv0].concat(args);\n    environment.root = directoryFromTree(files);\n    for (const [dirName, dirContents] of Object.entries(this.resourceData.filesystem))\n      environment.root.files[dirName] = directoryFromTree(dirContents);\n    const lineBufferedConsole = lineBuffered(printLine ?? console.log);\n    environment.stdin = stdin === void 0 ? null : stdin;\n    environment.stdout = stdout === void 0 ? lineBufferedConsole : stdout;\n    environment.stderr = stderr === void 0 ? lineBufferedConsole : stderr;\n    const wasmCommand = this.instantiate(\n      (filename) => this.resourceData.modules[filename],\n      { runtime: environment.exports },\n      // workaround for bytecodealliance/jco#374\n      (module, imports) => new WebAssembly.Instance(module, imports)\n    );\n    let error = null;\n    try {\n      wasmCommand.run.run();\n    } catch (e) {\n      if (!(e instanceof Exit))\n        throw e;\n      if (e instanceof Exit && e.code !== 0)\n        error = e;\n    }\n    for (const dirName of Object.keys(this.resourceData.filesystem))\n      delete environment.root.files[dirName];\n    files = directoryIntoTree(environment.root, { decodeASCII });\n    if (error !== null) {\n      error.files = files;\n      throw error;\n    } else {\n      return files;\n    }\n  }\n  run(args = null, files = {}, options = {}) {\n    if (this.resourceData === null)\n      return this.preload().then((_) => this.run(args, files, options));\n    if (args === null)\n      return;\n    return this.execute(args, files, options);\n  }\n};\n\n// gen/yosys.js\nvar ComponentError = class extends Error {\n  constructor(value) {\n    const enumerable = typeof value !== \"string\";\n    super(enumerable ? `${String(value)} (see error.payload)` : value);\n    Object.defineProperty(this, \"payload\", { value, enumerable });\n  }\n};\nvar dv = new DataView(new ArrayBuffer());\nvar dataView = (mem) => dv.buffer === mem.buffer ? dv : dv = new DataView(mem.buffer);\nfunction getErrorPayload(e) {\n  if (e && hasOwnProperty.call(e, \"payload\"))\n    return e.payload;\n  return e;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar resourceHandleSymbol = Symbol(\"resource\");\nvar symbolDispose = Symbol.dispose || Symbol.for(\"dispose\");\nvar toUint64 = (val) => BigInt.asUintN(64, BigInt(val));\nfunction toUint32(val) {\n  return val >>> 0;\n}\nvar utf8Decoder = new TextDecoder();\nvar utf8Encoder = new TextEncoder();\nvar utf8EncodedLen = 0;\nfunction utf8Encode(s, realloc, memory) {\n  if (typeof s !== \"string\")\n    throw new TypeError(\"expected a string\");\n  if (s.length === 0) {\n    utf8EncodedLen = 0;\n    return 1;\n  }\n  let allocLen = 0;\n  let ptr = 0;\n  let writtenTotal = 0;\n  while (s.length > 0) {\n    ptr = realloc(ptr, allocLen, 1, allocLen += s.length * 2);\n    const { read, written } = utf8Encoder.encodeInto(\n      s,\n      new Uint8Array(memory.buffer, ptr + writtenTotal, allocLen - writtenTotal)\n    );\n    writtenTotal += written;\n    s = s.slice(read);\n  }\n  utf8EncodedLen = writtenTotal;\n  return ptr;\n}\nfunction instantiate(getCoreModule, imports, instantiateCore = WebAssembly.Instance) {\n  const module0 = getCoreModule(\"yosys.core.wasm\");\n  const module1 = getCoreModule(\"yosys.core2.wasm\");\n  const module2 = getCoreModule(\"yosys.core3.wasm\");\n  const module3 = getCoreModule(\"yosys.core4.wasm\");\n  const { cli, fs, io, monotonicClock, wallClock } = imports.runtime;\n  const {\n    TerminalInput: TerminalInput2,\n    TerminalOutput: TerminalOutput2,\n    exit,\n    getArguments,\n    getEnvironment,\n    getStderr,\n    getStdin,\n    getStdout,\n    getTerminalStderr,\n    getTerminalStdin,\n    getTerminalStdout\n  } = cli;\n  const {\n    Descriptor: Descriptor2,\n    DirectoryEntryStream: DirectoryEntryStream2,\n    filesystemErrorCode,\n    getDirectories\n  } = fs;\n  const {\n    Error: Error$1,\n    InputStream: InputStream2,\n    OutputStream: OutputStream2\n  } = io;\n  const { now } = monotonicClock;\n  const { now: now$1 } = wallClock;\n  let exports0;\n  let exports1;\n  function trampoline0() {\n    const ret = now();\n    return toUint64(ret);\n  }\n  function trampoline8() {\n    const ret = getStderr();\n    if (!(ret instanceof OutputStream2)) {\n      throw new Error('Resource error: Not a valid \"OutputStream\" resource.');\n    }\n    var handle0 = handleCnt2++;\n    handleTable2.set(handle0, { rep: ret, own: true });\n    return handle0;\n  }\n  function trampoline9(arg0) {\n    let variant0;\n    switch (arg0) {\n      case 0: {\n        variant0 = {\n          tag: \"ok\",\n          val: void 0\n        };\n        break;\n      }\n      case 1: {\n        variant0 = {\n          tag: \"err\",\n          val: void 0\n        };\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant discriminant for expected\");\n      }\n    }\n    exit(variant0);\n  }\n  function trampoline10() {\n    const ret = getStdin();\n    if (!(ret instanceof InputStream2)) {\n      throw new Error('Resource error: Not a valid \"InputStream\" resource.');\n    }\n    var handle0 = handleCnt1++;\n    handleTable1.set(handle0, { rep: ret, own: true });\n    return handle0;\n  }\n  function trampoline11() {\n    const ret = getStdout();\n    if (!(ret instanceof OutputStream2)) {\n      throw new Error('Resource error: Not a valid \"OutputStream\" resource.');\n    }\n    var handle0 = handleCnt2++;\n    handleTable2.set(handle0, { rep: ret, own: true });\n    return handle0;\n  }\n  let exports2;\n  function trampoline12(arg0) {\n    const ret = getDirectories();\n    var vec3 = ret;\n    var len3 = vec3.length;\n    var result3 = realloc0(0, 0, 4, len3 * 12);\n    for (let i = 0; i < vec3.length; i++) {\n      const e = vec3[i];\n      const base = result3 + i * 12;\n      var [tuple0_0, tuple0_1] = e;\n      if (!(tuple0_0 instanceof Descriptor2)) {\n        throw new Error('Resource error: Not a valid \"Descriptor\" resource.');\n      }\n      var handle1 = handleCnt5++;\n      handleTable5.set(handle1, { rep: tuple0_0, own: true });\n      dataView(memory0).setInt32(base + 0, handle1, true);\n      var ptr2 = utf8Encode(tuple0_1, realloc0, memory0);\n      var len2 = utf8EncodedLen;\n      dataView(memory0).setInt32(base + 8, len2, true);\n      dataView(memory0).setInt32(base + 4, ptr2, true);\n    }\n    dataView(memory0).setInt32(arg0 + 4, len3, true);\n    dataView(memory0).setInt32(arg0 + 0, result3, true);\n  }\n  let memory0;\n  let realloc0;\n  function trampoline13(arg0) {\n    const ret = now$1();\n    var { seconds: v0_0, nanoseconds: v0_1 } = ret;\n    dataView(memory0).setBigInt64(arg0 + 0, toUint64(v0_0), true);\n    dataView(memory0).setInt32(arg0 + 8, toUint32(v0_1), true);\n  }\n  function trampoline14(arg0, arg1, arg2) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.readViaStream.call(rsc0, BigInt.asUintN(64, arg1)) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant4 = ret;\n    switch (variant4.tag) {\n      case \"ok\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg2 + 0, 0, true);\n        if (!(e instanceof InputStream2)) {\n          throw new Error('Resource error: Not a valid \"InputStream\" resource.');\n        }\n        var handle2 = handleCnt1++;\n        handleTable1.set(handle2, { rep: e, own: true });\n        dataView(memory0).setInt32(arg2 + 4, handle2, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg2 + 0, 1, true);\n        var val3 = e;\n        let enum3;\n        switch (val3) {\n          case \"access\": {\n            enum3 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum3 = 1;\n            break;\n          }\n          case \"already\": {\n            enum3 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum3 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum3 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum3 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum3 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum3 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum3 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum3 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum3 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum3 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum3 = 12;\n            break;\n          }\n          case \"io\": {\n            enum3 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum3 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum3 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum3 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum3 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum3 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum3 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum3 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum3 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum3 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum3 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum3 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum3 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum3 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum3 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum3 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum3 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum3 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum3 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum3 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum3 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum3 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum3 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum3 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val3}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg2 + 4, enum3, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline15(arg0, arg1, arg2) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.writeViaStream.call(rsc0, BigInt.asUintN(64, arg1)) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant4 = ret;\n    switch (variant4.tag) {\n      case \"ok\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg2 + 0, 0, true);\n        if (!(e instanceof OutputStream2)) {\n          throw new Error('Resource error: Not a valid \"OutputStream\" resource.');\n        }\n        var handle2 = handleCnt2++;\n        handleTable2.set(handle2, { rep: e, own: true });\n        dataView(memory0).setInt32(arg2 + 4, handle2, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg2 + 0, 1, true);\n        var val3 = e;\n        let enum3;\n        switch (val3) {\n          case \"access\": {\n            enum3 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum3 = 1;\n            break;\n          }\n          case \"already\": {\n            enum3 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum3 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum3 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum3 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum3 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum3 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum3 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum3 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum3 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum3 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum3 = 12;\n            break;\n          }\n          case \"io\": {\n            enum3 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum3 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum3 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum3 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum3 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum3 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum3 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum3 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum3 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum3 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum3 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum3 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum3 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum3 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum3 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum3 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum3 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum3 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum3 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum3 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum3 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum3 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum3 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum3 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val3}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg2 + 4, enum3, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline16(arg0, arg1) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.appendViaStream.call(rsc0) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant4 = ret;\n    switch (variant4.tag) {\n      case \"ok\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 0, true);\n        if (!(e instanceof OutputStream2)) {\n          throw new Error('Resource error: Not a valid \"OutputStream\" resource.');\n        }\n        var handle2 = handleCnt2++;\n        handleTable2.set(handle2, { rep: e, own: true });\n        dataView(memory0).setInt32(arg1 + 4, handle2, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 1, true);\n        var val3 = e;\n        let enum3;\n        switch (val3) {\n          case \"access\": {\n            enum3 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum3 = 1;\n            break;\n          }\n          case \"already\": {\n            enum3 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum3 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum3 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum3 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum3 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum3 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum3 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum3 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum3 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum3 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum3 = 12;\n            break;\n          }\n          case \"io\": {\n            enum3 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum3 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum3 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum3 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum3 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum3 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum3 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum3 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum3 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum3 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum3 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum3 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum3 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum3 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum3 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum3 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum3 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum3 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum3 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum3 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum3 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum3 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum3 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum3 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val3}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg1 + 4, enum3, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline17(arg0, arg1) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.getFlags.call(rsc0) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant4 = ret;\n    switch (variant4.tag) {\n      case \"ok\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 0, true);\n        let flags2 = 0;\n        if (typeof e === \"object\" && e !== null) {\n          flags2 = Boolean(e.read) << 0 | Boolean(e.write) << 1 | Boolean(e.fileIntegritySync) << 2 | Boolean(e.dataIntegritySync) << 3 | Boolean(e.requestedWriteSync) << 4 | Boolean(e.mutateDirectory) << 5;\n        } else if (e !== null && e !== void 0) {\n          throw new TypeError(\"only an object, undefined or null can be converted to flags\");\n        }\n        dataView(memory0).setInt8(arg1 + 1, flags2, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 1, true);\n        var val3 = e;\n        let enum3;\n        switch (val3) {\n          case \"access\": {\n            enum3 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum3 = 1;\n            break;\n          }\n          case \"already\": {\n            enum3 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum3 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum3 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum3 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum3 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum3 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum3 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum3 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum3 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum3 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum3 = 12;\n            break;\n          }\n          case \"io\": {\n            enum3 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum3 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum3 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum3 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum3 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum3 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum3 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum3 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum3 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum3 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum3 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum3 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum3 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum3 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum3 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum3 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum3 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum3 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum3 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum3 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum3 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum3 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum3 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum3 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val3}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg1 + 1, enum3, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline18(arg0, arg1) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.getType.call(rsc0) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant4 = ret;\n    switch (variant4.tag) {\n      case \"ok\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 0, true);\n        var val2 = e;\n        let enum2;\n        switch (val2) {\n          case \"unknown\": {\n            enum2 = 0;\n            break;\n          }\n          case \"block-device\": {\n            enum2 = 1;\n            break;\n          }\n          case \"character-device\": {\n            enum2 = 2;\n            break;\n          }\n          case \"directory\": {\n            enum2 = 3;\n            break;\n          }\n          case \"fifo\": {\n            enum2 = 4;\n            break;\n          }\n          case \"symbolic-link\": {\n            enum2 = 5;\n            break;\n          }\n          case \"regular-file\": {\n            enum2 = 6;\n            break;\n          }\n          case \"socket\": {\n            enum2 = 7;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val2}\" is not one of the cases of descriptor-type`);\n          }\n        }\n        dataView(memory0).setInt8(arg1 + 1, enum2, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 1, true);\n        var val3 = e;\n        let enum3;\n        switch (val3) {\n          case \"access\": {\n            enum3 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum3 = 1;\n            break;\n          }\n          case \"already\": {\n            enum3 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum3 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum3 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum3 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum3 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum3 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum3 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum3 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum3 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum3 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum3 = 12;\n            break;\n          }\n          case \"io\": {\n            enum3 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum3 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum3 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum3 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum3 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum3 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum3 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum3 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum3 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum3 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum3 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum3 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum3 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum3 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum3 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum3 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum3 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum3 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum3 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum3 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum3 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum3 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum3 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum3 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val3}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg1 + 1, enum3, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline19(arg0, arg1) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.readDirectory.call(rsc0) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant4 = ret;\n    switch (variant4.tag) {\n      case \"ok\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 0, true);\n        if (!(e instanceof DirectoryEntryStream2)) {\n          throw new Error('Resource error: Not a valid \"DirectoryEntryStream\" resource.');\n        }\n        var handle2 = handleCnt6++;\n        handleTable6.set(handle2, { rep: e, own: true });\n        dataView(memory0).setInt32(arg1 + 4, handle2, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 1, true);\n        var val3 = e;\n        let enum3;\n        switch (val3) {\n          case \"access\": {\n            enum3 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum3 = 1;\n            break;\n          }\n          case \"already\": {\n            enum3 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum3 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum3 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum3 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum3 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum3 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum3 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum3 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum3 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum3 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum3 = 12;\n            break;\n          }\n          case \"io\": {\n            enum3 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum3 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum3 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum3 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum3 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum3 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum3 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum3 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum3 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum3 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum3 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum3 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum3 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum3 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum3 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum3 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum3 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum3 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum3 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum3 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum3 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum3 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum3 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum3 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val3}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg1 + 4, enum3, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline20(arg0, arg1, arg2, arg3) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    var ptr2 = arg1;\n    var len2 = arg2;\n    var result2 = utf8Decoder.decode(new Uint8Array(memory0.buffer, ptr2, len2));\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.createDirectoryAt.call(rsc0, result2) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant4 = ret;\n    switch (variant4.tag) {\n      case \"ok\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg3 + 0, 0, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg3 + 0, 1, true);\n        var val3 = e;\n        let enum3;\n        switch (val3) {\n          case \"access\": {\n            enum3 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum3 = 1;\n            break;\n          }\n          case \"already\": {\n            enum3 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum3 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum3 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum3 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum3 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum3 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum3 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum3 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum3 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum3 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum3 = 12;\n            break;\n          }\n          case \"io\": {\n            enum3 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum3 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum3 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum3 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum3 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum3 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum3 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum3 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum3 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum3 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum3 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum3 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum3 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum3 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum3 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum3 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum3 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum3 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum3 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum3 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum3 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum3 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum3 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum3 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val3}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg3 + 1, enum3, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline21(arg0, arg1) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.stat.call(rsc0) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant11 = ret;\n    switch (variant11.tag) {\n      case \"ok\": {\n        const e = variant11.val;\n        dataView(memory0).setInt8(arg1 + 0, 0, true);\n        var { type: v2_0, linkCount: v2_1, size: v2_2, dataAccessTimestamp: v2_3, dataModificationTimestamp: v2_4, statusChangeTimestamp: v2_5 } = e;\n        var val3 = v2_0;\n        let enum3;\n        switch (val3) {\n          case \"unknown\": {\n            enum3 = 0;\n            break;\n          }\n          case \"block-device\": {\n            enum3 = 1;\n            break;\n          }\n          case \"character-device\": {\n            enum3 = 2;\n            break;\n          }\n          case \"directory\": {\n            enum3 = 3;\n            break;\n          }\n          case \"fifo\": {\n            enum3 = 4;\n            break;\n          }\n          case \"symbolic-link\": {\n            enum3 = 5;\n            break;\n          }\n          case \"regular-file\": {\n            enum3 = 6;\n            break;\n          }\n          case \"socket\": {\n            enum3 = 7;\n            break;\n          }\n          default: {\n            if (v2_0 instanceof Error) {\n              console.error(v2_0);\n            }\n            throw new TypeError(`\"${val3}\" is not one of the cases of descriptor-type`);\n          }\n        }\n        dataView(memory0).setInt8(arg1 + 8, enum3, true);\n        dataView(memory0).setBigInt64(arg1 + 16, toUint64(v2_1), true);\n        dataView(memory0).setBigInt64(arg1 + 24, toUint64(v2_2), true);\n        var variant5 = v2_3;\n        if (variant5 === null || variant5 === void 0) {\n          dataView(memory0).setInt8(arg1 + 32, 0, true);\n        } else {\n          const e2 = variant5;\n          dataView(memory0).setInt8(arg1 + 32, 1, true);\n          var { seconds: v4_0, nanoseconds: v4_1 } = e2;\n          dataView(memory0).setBigInt64(arg1 + 40, toUint64(v4_0), true);\n          dataView(memory0).setInt32(arg1 + 48, toUint32(v4_1), true);\n        }\n        var variant7 = v2_4;\n        if (variant7 === null || variant7 === void 0) {\n          dataView(memory0).setInt8(arg1 + 56, 0, true);\n        } else {\n          const e2 = variant7;\n          dataView(memory0).setInt8(arg1 + 56, 1, true);\n          var { seconds: v6_0, nanoseconds: v6_1 } = e2;\n          dataView(memory0).setBigInt64(arg1 + 64, toUint64(v6_0), true);\n          dataView(memory0).setInt32(arg1 + 72, toUint32(v6_1), true);\n        }\n        var variant9 = v2_5;\n        if (variant9 === null || variant9 === void 0) {\n          dataView(memory0).setInt8(arg1 + 80, 0, true);\n        } else {\n          const e2 = variant9;\n          dataView(memory0).setInt8(arg1 + 80, 1, true);\n          var { seconds: v8_0, nanoseconds: v8_1 } = e2;\n          dataView(memory0).setBigInt64(arg1 + 88, toUint64(v8_0), true);\n          dataView(memory0).setInt32(arg1 + 96, toUint32(v8_1), true);\n        }\n        break;\n      }\n      case \"err\": {\n        const e = variant11.val;\n        dataView(memory0).setInt8(arg1 + 0, 1, true);\n        var val10 = e;\n        let enum10;\n        switch (val10) {\n          case \"access\": {\n            enum10 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum10 = 1;\n            break;\n          }\n          case \"already\": {\n            enum10 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum10 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum10 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum10 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum10 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum10 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum10 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum10 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum10 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum10 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum10 = 12;\n            break;\n          }\n          case \"io\": {\n            enum10 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum10 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum10 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum10 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum10 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum10 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum10 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum10 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum10 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum10 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum10 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum10 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum10 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum10 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum10 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum10 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum10 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum10 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum10 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum10 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum10 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum10 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum10 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum10 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val10}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg1 + 8, enum10, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline22(arg0, arg1, arg2, arg3, arg4) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    if ((arg1 & 4294967294) !== 0) {\n      throw new TypeError(\"flags have extraneous bits set\");\n    }\n    var flags2 = {\n      symlinkFollow: Boolean(arg1 & 1)\n    };\n    var ptr3 = arg2;\n    var len3 = arg3;\n    var result3 = utf8Decoder.decode(new Uint8Array(memory0.buffer, ptr3, len3));\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.statAt.call(rsc0, flags2, result3) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant13 = ret;\n    switch (variant13.tag) {\n      case \"ok\": {\n        const e = variant13.val;\n        dataView(memory0).setInt8(arg4 + 0, 0, true);\n        var { type: v4_0, linkCount: v4_1, size: v4_2, dataAccessTimestamp: v4_3, dataModificationTimestamp: v4_4, statusChangeTimestamp: v4_5 } = e;\n        var val5 = v4_0;\n        let enum5;\n        switch (val5) {\n          case \"unknown\": {\n            enum5 = 0;\n            break;\n          }\n          case \"block-device\": {\n            enum5 = 1;\n            break;\n          }\n          case \"character-device\": {\n            enum5 = 2;\n            break;\n          }\n          case \"directory\": {\n            enum5 = 3;\n            break;\n          }\n          case \"fifo\": {\n            enum5 = 4;\n            break;\n          }\n          case \"symbolic-link\": {\n            enum5 = 5;\n            break;\n          }\n          case \"regular-file\": {\n            enum5 = 6;\n            break;\n          }\n          case \"socket\": {\n            enum5 = 7;\n            break;\n          }\n          default: {\n            if (v4_0 instanceof Error) {\n              console.error(v4_0);\n            }\n            throw new TypeError(`\"${val5}\" is not one of the cases of descriptor-type`);\n          }\n        }\n        dataView(memory0).setInt8(arg4 + 8, enum5, true);\n        dataView(memory0).setBigInt64(arg4 + 16, toUint64(v4_1), true);\n        dataView(memory0).setBigInt64(arg4 + 24, toUint64(v4_2), true);\n        var variant7 = v4_3;\n        if (variant7 === null || variant7 === void 0) {\n          dataView(memory0).setInt8(arg4 + 32, 0, true);\n        } else {\n          const e2 = variant7;\n          dataView(memory0).setInt8(arg4 + 32, 1, true);\n          var { seconds: v6_0, nanoseconds: v6_1 } = e2;\n          dataView(memory0).setBigInt64(arg4 + 40, toUint64(v6_0), true);\n          dataView(memory0).setInt32(arg4 + 48, toUint32(v6_1), true);\n        }\n        var variant9 = v4_4;\n        if (variant9 === null || variant9 === void 0) {\n          dataView(memory0).setInt8(arg4 + 56, 0, true);\n        } else {\n          const e2 = variant9;\n          dataView(memory0).setInt8(arg4 + 56, 1, true);\n          var { seconds: v8_0, nanoseconds: v8_1 } = e2;\n          dataView(memory0).setBigInt64(arg4 + 64, toUint64(v8_0), true);\n          dataView(memory0).setInt32(arg4 + 72, toUint32(v8_1), true);\n        }\n        var variant11 = v4_5;\n        if (variant11 === null || variant11 === void 0) {\n          dataView(memory0).setInt8(arg4 + 80, 0, true);\n        } else {\n          const e2 = variant11;\n          dataView(memory0).setInt8(arg4 + 80, 1, true);\n          var { seconds: v10_0, nanoseconds: v10_1 } = e2;\n          dataView(memory0).setBigInt64(arg4 + 88, toUint64(v10_0), true);\n          dataView(memory0).setInt32(arg4 + 96, toUint32(v10_1), true);\n        }\n        break;\n      }\n      case \"err\": {\n        const e = variant13.val;\n        dataView(memory0).setInt8(arg4 + 0, 1, true);\n        var val12 = e;\n        let enum12;\n        switch (val12) {\n          case \"access\": {\n            enum12 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum12 = 1;\n            break;\n          }\n          case \"already\": {\n            enum12 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum12 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum12 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum12 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum12 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum12 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum12 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum12 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum12 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum12 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum12 = 12;\n            break;\n          }\n          case \"io\": {\n            enum12 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum12 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum12 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum12 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum12 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum12 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum12 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum12 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum12 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum12 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum12 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum12 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum12 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum12 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum12 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum12 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum12 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum12 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum12 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum12 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum12 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum12 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum12 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum12 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val12}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg4 + 8, enum12, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline23(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    if ((arg1 & 4294967294) !== 0) {\n      throw new TypeError(\"flags have extraneous bits set\");\n    }\n    var flags2 = {\n      symlinkFollow: Boolean(arg1 & 1)\n    };\n    var ptr3 = arg2;\n    var len3 = arg3;\n    var result3 = utf8Decoder.decode(new Uint8Array(memory0.buffer, ptr3, len3));\n    if ((arg4 & 4294967280) !== 0) {\n      throw new TypeError(\"flags have extraneous bits set\");\n    }\n    var flags4 = {\n      create: Boolean(arg4 & 1),\n      directory: Boolean(arg4 & 2),\n      exclusive: Boolean(arg4 & 4),\n      truncate: Boolean(arg4 & 8)\n    };\n    if ((arg5 & 4294967232) !== 0) {\n      throw new TypeError(\"flags have extraneous bits set\");\n    }\n    var flags5 = {\n      read: Boolean(arg5 & 1),\n      write: Boolean(arg5 & 2),\n      fileIntegritySync: Boolean(arg5 & 4),\n      dataIntegritySync: Boolean(arg5 & 8),\n      requestedWriteSync: Boolean(arg5 & 16),\n      mutateDirectory: Boolean(arg5 & 32)\n    };\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.openAt.call(rsc0, flags2, result3, flags4, flags5) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant8 = ret;\n    switch (variant8.tag) {\n      case \"ok\": {\n        const e = variant8.val;\n        dataView(memory0).setInt8(arg6 + 0, 0, true);\n        if (!(e instanceof Descriptor2)) {\n          throw new Error('Resource error: Not a valid \"Descriptor\" resource.');\n        }\n        var handle6 = handleCnt5++;\n        handleTable5.set(handle6, { rep: e, own: true });\n        dataView(memory0).setInt32(arg6 + 4, handle6, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant8.val;\n        dataView(memory0).setInt8(arg6 + 0, 1, true);\n        var val7 = e;\n        let enum7;\n        switch (val7) {\n          case \"access\": {\n            enum7 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum7 = 1;\n            break;\n          }\n          case \"already\": {\n            enum7 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum7 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum7 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum7 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum7 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum7 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum7 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum7 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum7 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum7 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum7 = 12;\n            break;\n          }\n          case \"io\": {\n            enum7 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum7 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum7 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum7 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum7 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum7 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum7 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum7 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum7 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum7 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum7 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum7 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum7 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum7 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum7 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum7 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum7 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum7 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum7 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum7 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum7 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum7 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum7 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum7 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val7}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg6 + 4, enum7, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline24(arg0, arg1, arg2, arg3) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    var ptr2 = arg1;\n    var len2 = arg2;\n    var result2 = utf8Decoder.decode(new Uint8Array(memory0.buffer, ptr2, len2));\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.removeDirectoryAt.call(rsc0, result2) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant4 = ret;\n    switch (variant4.tag) {\n      case \"ok\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg3 + 0, 0, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg3 + 0, 1, true);\n        var val3 = e;\n        let enum3;\n        switch (val3) {\n          case \"access\": {\n            enum3 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum3 = 1;\n            break;\n          }\n          case \"already\": {\n            enum3 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum3 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum3 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum3 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum3 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum3 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum3 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum3 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum3 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum3 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum3 = 12;\n            break;\n          }\n          case \"io\": {\n            enum3 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum3 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum3 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum3 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum3 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum3 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum3 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum3 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum3 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum3 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum3 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum3 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum3 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum3 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum3 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum3 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum3 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum3 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum3 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum3 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum3 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum3 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum3 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum3 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val3}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg3 + 1, enum3, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline25(arg0, arg1, arg2, arg3) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    var ptr2 = arg1;\n    var len2 = arg2;\n    var result2 = utf8Decoder.decode(new Uint8Array(memory0.buffer, ptr2, len2));\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.unlinkFileAt.call(rsc0, result2) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant4 = ret;\n    switch (variant4.tag) {\n      case \"ok\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg3 + 0, 0, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg3 + 0, 1, true);\n        var val3 = e;\n        let enum3;\n        switch (val3) {\n          case \"access\": {\n            enum3 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum3 = 1;\n            break;\n          }\n          case \"already\": {\n            enum3 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum3 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum3 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum3 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum3 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum3 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum3 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum3 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum3 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum3 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum3 = 12;\n            break;\n          }\n          case \"io\": {\n            enum3 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum3 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum3 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum3 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum3 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum3 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum3 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum3 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum3 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum3 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum3 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum3 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum3 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum3 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum3 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum3 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum3 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum3 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum3 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum3 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum3 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum3 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum3 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum3 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val3}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg3 + 1, enum3, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline26(arg0, arg1) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.metadataHash.call(rsc0) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant4 = ret;\n    switch (variant4.tag) {\n      case \"ok\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 0, true);\n        var { lower: v2_0, upper: v2_1 } = e;\n        dataView(memory0).setBigInt64(arg1 + 8, toUint64(v2_0), true);\n        dataView(memory0).setBigInt64(arg1 + 16, toUint64(v2_1), true);\n        break;\n      }\n      case \"err\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 1, true);\n        var val3 = e;\n        let enum3;\n        switch (val3) {\n          case \"access\": {\n            enum3 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum3 = 1;\n            break;\n          }\n          case \"already\": {\n            enum3 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum3 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum3 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum3 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum3 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum3 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum3 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum3 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum3 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum3 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum3 = 12;\n            break;\n          }\n          case \"io\": {\n            enum3 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum3 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum3 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum3 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum3 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum3 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum3 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum3 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum3 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum3 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum3 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum3 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum3 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum3 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum3 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum3 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum3 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum3 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum3 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum3 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum3 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum3 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum3 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum3 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val3}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg1 + 8, enum3, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline27(arg0, arg1, arg2, arg3, arg4) {\n    var handle1 = arg0;\n    var rsc0 = handleTable5.get(handle1).rep;\n    if ((arg1 & 4294967294) !== 0) {\n      throw new TypeError(\"flags have extraneous bits set\");\n    }\n    var flags2 = {\n      symlinkFollow: Boolean(arg1 & 1)\n    };\n    var ptr3 = arg2;\n    var len3 = arg3;\n    var result3 = utf8Decoder.decode(new Uint8Array(memory0.buffer, ptr3, len3));\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: Descriptor2.prototype.metadataHashAt.call(rsc0, flags2, result3) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant6 = ret;\n    switch (variant6.tag) {\n      case \"ok\": {\n        const e = variant6.val;\n        dataView(memory0).setInt8(arg4 + 0, 0, true);\n        var { lower: v4_0, upper: v4_1 } = e;\n        dataView(memory0).setBigInt64(arg4 + 8, toUint64(v4_0), true);\n        dataView(memory0).setBigInt64(arg4 + 16, toUint64(v4_1), true);\n        break;\n      }\n      case \"err\": {\n        const e = variant6.val;\n        dataView(memory0).setInt8(arg4 + 0, 1, true);\n        var val5 = e;\n        let enum5;\n        switch (val5) {\n          case \"access\": {\n            enum5 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum5 = 1;\n            break;\n          }\n          case \"already\": {\n            enum5 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum5 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum5 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum5 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum5 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum5 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum5 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum5 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum5 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum5 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum5 = 12;\n            break;\n          }\n          case \"io\": {\n            enum5 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum5 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum5 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum5 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum5 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum5 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum5 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum5 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum5 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum5 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum5 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum5 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum5 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum5 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum5 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum5 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum5 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum5 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum5 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum5 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum5 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum5 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum5 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum5 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val5}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg4 + 8, enum5, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline28(arg0, arg1) {\n    var handle1 = arg0;\n    var rsc0 = handleTable6.get(handle1).rep;\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: DirectoryEntryStream2.prototype.readDirectoryEntry.call(rsc0) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant7 = ret;\n    switch (variant7.tag) {\n      case \"ok\": {\n        const e = variant7.val;\n        dataView(memory0).setInt8(arg1 + 0, 0, true);\n        var variant5 = e;\n        if (variant5 === null || variant5 === void 0) {\n          dataView(memory0).setInt8(arg1 + 4, 0, true);\n        } else {\n          const e2 = variant5;\n          dataView(memory0).setInt8(arg1 + 4, 1, true);\n          var { type: v2_0, name: v2_1 } = e2;\n          var val3 = v2_0;\n          let enum3;\n          switch (val3) {\n            case \"unknown\": {\n              enum3 = 0;\n              break;\n            }\n            case \"block-device\": {\n              enum3 = 1;\n              break;\n            }\n            case \"character-device\": {\n              enum3 = 2;\n              break;\n            }\n            case \"directory\": {\n              enum3 = 3;\n              break;\n            }\n            case \"fifo\": {\n              enum3 = 4;\n              break;\n            }\n            case \"symbolic-link\": {\n              enum3 = 5;\n              break;\n            }\n            case \"regular-file\": {\n              enum3 = 6;\n              break;\n            }\n            case \"socket\": {\n              enum3 = 7;\n              break;\n            }\n            default: {\n              if (v2_0 instanceof Error) {\n                console.error(v2_0);\n              }\n              throw new TypeError(`\"${val3}\" is not one of the cases of descriptor-type`);\n            }\n          }\n          dataView(memory0).setInt8(arg1 + 8, enum3, true);\n          var ptr4 = utf8Encode(v2_1, realloc0, memory0);\n          var len4 = utf8EncodedLen;\n          dataView(memory0).setInt32(arg1 + 16, len4, true);\n          dataView(memory0).setInt32(arg1 + 12, ptr4, true);\n        }\n        break;\n      }\n      case \"err\": {\n        const e = variant7.val;\n        dataView(memory0).setInt8(arg1 + 0, 1, true);\n        var val6 = e;\n        let enum6;\n        switch (val6) {\n          case \"access\": {\n            enum6 = 0;\n            break;\n          }\n          case \"would-block\": {\n            enum6 = 1;\n            break;\n          }\n          case \"already\": {\n            enum6 = 2;\n            break;\n          }\n          case \"bad-descriptor\": {\n            enum6 = 3;\n            break;\n          }\n          case \"busy\": {\n            enum6 = 4;\n            break;\n          }\n          case \"deadlock\": {\n            enum6 = 5;\n            break;\n          }\n          case \"quota\": {\n            enum6 = 6;\n            break;\n          }\n          case \"exist\": {\n            enum6 = 7;\n            break;\n          }\n          case \"file-too-large\": {\n            enum6 = 8;\n            break;\n          }\n          case \"illegal-byte-sequence\": {\n            enum6 = 9;\n            break;\n          }\n          case \"in-progress\": {\n            enum6 = 10;\n            break;\n          }\n          case \"interrupted\": {\n            enum6 = 11;\n            break;\n          }\n          case \"invalid\": {\n            enum6 = 12;\n            break;\n          }\n          case \"io\": {\n            enum6 = 13;\n            break;\n          }\n          case \"is-directory\": {\n            enum6 = 14;\n            break;\n          }\n          case \"loop\": {\n            enum6 = 15;\n            break;\n          }\n          case \"too-many-links\": {\n            enum6 = 16;\n            break;\n          }\n          case \"message-size\": {\n            enum6 = 17;\n            break;\n          }\n          case \"name-too-long\": {\n            enum6 = 18;\n            break;\n          }\n          case \"no-device\": {\n            enum6 = 19;\n            break;\n          }\n          case \"no-entry\": {\n            enum6 = 20;\n            break;\n          }\n          case \"no-lock\": {\n            enum6 = 21;\n            break;\n          }\n          case \"insufficient-memory\": {\n            enum6 = 22;\n            break;\n          }\n          case \"insufficient-space\": {\n            enum6 = 23;\n            break;\n          }\n          case \"not-directory\": {\n            enum6 = 24;\n            break;\n          }\n          case \"not-empty\": {\n            enum6 = 25;\n            break;\n          }\n          case \"not-recoverable\": {\n            enum6 = 26;\n            break;\n          }\n          case \"unsupported\": {\n            enum6 = 27;\n            break;\n          }\n          case \"no-tty\": {\n            enum6 = 28;\n            break;\n          }\n          case \"no-such-device\": {\n            enum6 = 29;\n            break;\n          }\n          case \"overflow\": {\n            enum6 = 30;\n            break;\n          }\n          case \"not-permitted\": {\n            enum6 = 31;\n            break;\n          }\n          case \"pipe\": {\n            enum6 = 32;\n            break;\n          }\n          case \"read-only\": {\n            enum6 = 33;\n            break;\n          }\n          case \"invalid-seek\": {\n            enum6 = 34;\n            break;\n          }\n          case \"text-file-busy\": {\n            enum6 = 35;\n            break;\n          }\n          case \"cross-device\": {\n            enum6 = 36;\n            break;\n          }\n          default: {\n            if (e instanceof Error) {\n              console.error(e);\n            }\n            throw new TypeError(`\"${val6}\" is not one of the cases of error-code`);\n          }\n        }\n        dataView(memory0).setInt8(arg1 + 4, enum6, true);\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline29(arg0, arg1) {\n    var handle1 = arg0;\n    var rsc0 = handleTable0.get(handle1).rep;\n    const ret = filesystemErrorCode(rsc0);\n    var variant3 = ret;\n    if (variant3 === null || variant3 === void 0) {\n      dataView(memory0).setInt8(arg1 + 0, 0, true);\n    } else {\n      const e = variant3;\n      dataView(memory0).setInt8(arg1 + 0, 1, true);\n      var val2 = e;\n      let enum2;\n      switch (val2) {\n        case \"access\": {\n          enum2 = 0;\n          break;\n        }\n        case \"would-block\": {\n          enum2 = 1;\n          break;\n        }\n        case \"already\": {\n          enum2 = 2;\n          break;\n        }\n        case \"bad-descriptor\": {\n          enum2 = 3;\n          break;\n        }\n        case \"busy\": {\n          enum2 = 4;\n          break;\n        }\n        case \"deadlock\": {\n          enum2 = 5;\n          break;\n        }\n        case \"quota\": {\n          enum2 = 6;\n          break;\n        }\n        case \"exist\": {\n          enum2 = 7;\n          break;\n        }\n        case \"file-too-large\": {\n          enum2 = 8;\n          break;\n        }\n        case \"illegal-byte-sequence\": {\n          enum2 = 9;\n          break;\n        }\n        case \"in-progress\": {\n          enum2 = 10;\n          break;\n        }\n        case \"interrupted\": {\n          enum2 = 11;\n          break;\n        }\n        case \"invalid\": {\n          enum2 = 12;\n          break;\n        }\n        case \"io\": {\n          enum2 = 13;\n          break;\n        }\n        case \"is-directory\": {\n          enum2 = 14;\n          break;\n        }\n        case \"loop\": {\n          enum2 = 15;\n          break;\n        }\n        case \"too-many-links\": {\n          enum2 = 16;\n          break;\n        }\n        case \"message-size\": {\n          enum2 = 17;\n          break;\n        }\n        case \"name-too-long\": {\n          enum2 = 18;\n          break;\n        }\n        case \"no-device\": {\n          enum2 = 19;\n          break;\n        }\n        case \"no-entry\": {\n          enum2 = 20;\n          break;\n        }\n        case \"no-lock\": {\n          enum2 = 21;\n          break;\n        }\n        case \"insufficient-memory\": {\n          enum2 = 22;\n          break;\n        }\n        case \"insufficient-space\": {\n          enum2 = 23;\n          break;\n        }\n        case \"not-directory\": {\n          enum2 = 24;\n          break;\n        }\n        case \"not-empty\": {\n          enum2 = 25;\n          break;\n        }\n        case \"not-recoverable\": {\n          enum2 = 26;\n          break;\n        }\n        case \"unsupported\": {\n          enum2 = 27;\n          break;\n        }\n        case \"no-tty\": {\n          enum2 = 28;\n          break;\n        }\n        case \"no-such-device\": {\n          enum2 = 29;\n          break;\n        }\n        case \"overflow\": {\n          enum2 = 30;\n          break;\n        }\n        case \"not-permitted\": {\n          enum2 = 31;\n          break;\n        }\n        case \"pipe\": {\n          enum2 = 32;\n          break;\n        }\n        case \"read-only\": {\n          enum2 = 33;\n          break;\n        }\n        case \"invalid-seek\": {\n          enum2 = 34;\n          break;\n        }\n        case \"text-file-busy\": {\n          enum2 = 35;\n          break;\n        }\n        case \"cross-device\": {\n          enum2 = 36;\n          break;\n        }\n        default: {\n          if (e instanceof Error) {\n            console.error(e);\n          }\n          throw new TypeError(`\"${val2}\" is not one of the cases of error-code`);\n        }\n      }\n      dataView(memory0).setInt8(arg1 + 1, enum2, true);\n    }\n  }\n  function trampoline30(arg0, arg1, arg2) {\n    var handle1 = arg0;\n    var rsc0 = handleTable1.get(handle1).rep;\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: InputStream2.prototype.read.call(rsc0, BigInt.asUintN(64, arg1)) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant5 = ret;\n    switch (variant5.tag) {\n      case \"ok\": {\n        const e = variant5.val;\n        dataView(memory0).setInt8(arg2 + 0, 0, true);\n        var val2 = e;\n        var len2 = val2.byteLength;\n        var ptr2 = realloc0(0, 0, 1, len2 * 1);\n        var src2 = new Uint8Array(val2.buffer || val2, val2.byteOffset, len2 * 1);\n        new Uint8Array(memory0.buffer, ptr2, len2 * 1).set(src2);\n        dataView(memory0).setInt32(arg2 + 8, len2, true);\n        dataView(memory0).setInt32(arg2 + 4, ptr2, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant5.val;\n        dataView(memory0).setInt8(arg2 + 0, 1, true);\n        var variant4 = e;\n        switch (variant4.tag) {\n          case \"last-operation-failed\": {\n            const e2 = variant4.val;\n            dataView(memory0).setInt8(arg2 + 4, 0, true);\n            if (!(e2 instanceof Error$1)) {\n              throw new Error('Resource error: Not a valid \"Error\" resource.');\n            }\n            var handle3 = handleCnt0++;\n            handleTable0.set(handle3, { rep: e2, own: true });\n            dataView(memory0).setInt32(arg2 + 8, handle3, true);\n            break;\n          }\n          case \"closed\": {\n            dataView(memory0).setInt8(arg2 + 4, 1, true);\n            break;\n          }\n          default: {\n            throw new TypeError(`invalid variant tag value \\`${JSON.stringify(variant4.tag)}\\` (received \\`${variant4}\\`) specified for \\`StreamError\\``);\n          }\n        }\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline31(arg0, arg1, arg2) {\n    var handle1 = arg0;\n    var rsc0 = handleTable1.get(handle1).rep;\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: InputStream2.prototype.blockingRead.call(rsc0, BigInt.asUintN(64, arg1)) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant5 = ret;\n    switch (variant5.tag) {\n      case \"ok\": {\n        const e = variant5.val;\n        dataView(memory0).setInt8(arg2 + 0, 0, true);\n        var val2 = e;\n        var len2 = val2.byteLength;\n        var ptr2 = realloc0(0, 0, 1, len2 * 1);\n        var src2 = new Uint8Array(val2.buffer || val2, val2.byteOffset, len2 * 1);\n        new Uint8Array(memory0.buffer, ptr2, len2 * 1).set(src2);\n        dataView(memory0).setInt32(arg2 + 8, len2, true);\n        dataView(memory0).setInt32(arg2 + 4, ptr2, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant5.val;\n        dataView(memory0).setInt8(arg2 + 0, 1, true);\n        var variant4 = e;\n        switch (variant4.tag) {\n          case \"last-operation-failed\": {\n            const e2 = variant4.val;\n            dataView(memory0).setInt8(arg2 + 4, 0, true);\n            if (!(e2 instanceof Error$1)) {\n              throw new Error('Resource error: Not a valid \"Error\" resource.');\n            }\n            var handle3 = handleCnt0++;\n            handleTable0.set(handle3, { rep: e2, own: true });\n            dataView(memory0).setInt32(arg2 + 8, handle3, true);\n            break;\n          }\n          case \"closed\": {\n            dataView(memory0).setInt8(arg2 + 4, 1, true);\n            break;\n          }\n          default: {\n            throw new TypeError(`invalid variant tag value \\`${JSON.stringify(variant4.tag)}\\` (received \\`${variant4}\\`) specified for \\`StreamError\\``);\n          }\n        }\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline32(arg0, arg1) {\n    var handle1 = arg0;\n    var rsc0 = handleTable2.get(handle1).rep;\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: OutputStream2.prototype.checkWrite.call(rsc0) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant4 = ret;\n    switch (variant4.tag) {\n      case \"ok\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 0, true);\n        dataView(memory0).setBigInt64(arg1 + 8, toUint64(e), true);\n        break;\n      }\n      case \"err\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 1, true);\n        var variant3 = e;\n        switch (variant3.tag) {\n          case \"last-operation-failed\": {\n            const e2 = variant3.val;\n            dataView(memory0).setInt8(arg1 + 8, 0, true);\n            if (!(e2 instanceof Error$1)) {\n              throw new Error('Resource error: Not a valid \"Error\" resource.');\n            }\n            var handle2 = handleCnt0++;\n            handleTable0.set(handle2, { rep: e2, own: true });\n            dataView(memory0).setInt32(arg1 + 12, handle2, true);\n            break;\n          }\n          case \"closed\": {\n            dataView(memory0).setInt8(arg1 + 8, 1, true);\n            break;\n          }\n          default: {\n            throw new TypeError(`invalid variant tag value \\`${JSON.stringify(variant3.tag)}\\` (received \\`${variant3}\\`) specified for \\`StreamError\\``);\n          }\n        }\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline33(arg0, arg1, arg2, arg3) {\n    var handle1 = arg0;\n    var rsc0 = handleTable2.get(handle1).rep;\n    var ptr2 = arg1;\n    var len2 = arg2;\n    var result2 = new Uint8Array(memory0.buffer.slice(ptr2, ptr2 + len2 * 1));\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: OutputStream2.prototype.write.call(rsc0, result2) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant5 = ret;\n    switch (variant5.tag) {\n      case \"ok\": {\n        const e = variant5.val;\n        dataView(memory0).setInt8(arg3 + 0, 0, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant5.val;\n        dataView(memory0).setInt8(arg3 + 0, 1, true);\n        var variant4 = e;\n        switch (variant4.tag) {\n          case \"last-operation-failed\": {\n            const e2 = variant4.val;\n            dataView(memory0).setInt8(arg3 + 4, 0, true);\n            if (!(e2 instanceof Error$1)) {\n              throw new Error('Resource error: Not a valid \"Error\" resource.');\n            }\n            var handle3 = handleCnt0++;\n            handleTable0.set(handle3, { rep: e2, own: true });\n            dataView(memory0).setInt32(arg3 + 8, handle3, true);\n            break;\n          }\n          case \"closed\": {\n            dataView(memory0).setInt8(arg3 + 4, 1, true);\n            break;\n          }\n          default: {\n            throw new TypeError(`invalid variant tag value \\`${JSON.stringify(variant4.tag)}\\` (received \\`${variant4}\\`) specified for \\`StreamError\\``);\n          }\n        }\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline34(arg0, arg1, arg2, arg3) {\n    var handle1 = arg0;\n    var rsc0 = handleTable2.get(handle1).rep;\n    var ptr2 = arg1;\n    var len2 = arg2;\n    var result2 = new Uint8Array(memory0.buffer.slice(ptr2, ptr2 + len2 * 1));\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: OutputStream2.prototype.blockingWriteAndFlush.call(rsc0, result2) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant5 = ret;\n    switch (variant5.tag) {\n      case \"ok\": {\n        const e = variant5.val;\n        dataView(memory0).setInt8(arg3 + 0, 0, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant5.val;\n        dataView(memory0).setInt8(arg3 + 0, 1, true);\n        var variant4 = e;\n        switch (variant4.tag) {\n          case \"last-operation-failed\": {\n            const e2 = variant4.val;\n            dataView(memory0).setInt8(arg3 + 4, 0, true);\n            if (!(e2 instanceof Error$1)) {\n              throw new Error('Resource error: Not a valid \"Error\" resource.');\n            }\n            var handle3 = handleCnt0++;\n            handleTable0.set(handle3, { rep: e2, own: true });\n            dataView(memory0).setInt32(arg3 + 8, handle3, true);\n            break;\n          }\n          case \"closed\": {\n            dataView(memory0).setInt8(arg3 + 4, 1, true);\n            break;\n          }\n          default: {\n            throw new TypeError(`invalid variant tag value \\`${JSON.stringify(variant4.tag)}\\` (received \\`${variant4}\\`) specified for \\`StreamError\\``);\n          }\n        }\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline35(arg0, arg1) {\n    var handle1 = arg0;\n    var rsc0 = handleTable2.get(handle1).rep;\n    let ret;\n    try {\n      ret = { tag: \"ok\", val: OutputStream2.prototype.blockingFlush.call(rsc0) };\n    } catch (e) {\n      ret = { tag: \"err\", val: getErrorPayload(e) };\n    }\n    var variant4 = ret;\n    switch (variant4.tag) {\n      case \"ok\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 0, true);\n        break;\n      }\n      case \"err\": {\n        const e = variant4.val;\n        dataView(memory0).setInt8(arg1 + 0, 1, true);\n        var variant3 = e;\n        switch (variant3.tag) {\n          case \"last-operation-failed\": {\n            const e2 = variant3.val;\n            dataView(memory0).setInt8(arg1 + 4, 0, true);\n            if (!(e2 instanceof Error$1)) {\n              throw new Error('Resource error: Not a valid \"Error\" resource.');\n            }\n            var handle2 = handleCnt0++;\n            handleTable0.set(handle2, { rep: e2, own: true });\n            dataView(memory0).setInt32(arg1 + 8, handle2, true);\n            break;\n          }\n          case \"closed\": {\n            dataView(memory0).setInt8(arg1 + 4, 1, true);\n            break;\n          }\n          default: {\n            throw new TypeError(`invalid variant tag value \\`${JSON.stringify(variant3.tag)}\\` (received \\`${variant3}\\`) specified for \\`StreamError\\``);\n          }\n        }\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant specified for result\");\n      }\n    }\n  }\n  function trampoline36(arg0) {\n    const ret = getEnvironment();\n    var vec3 = ret;\n    var len3 = vec3.length;\n    var result3 = realloc0(0, 0, 4, len3 * 16);\n    for (let i = 0; i < vec3.length; i++) {\n      const e = vec3[i];\n      const base = result3 + i * 16;\n      var [tuple0_0, tuple0_1] = e;\n      var ptr1 = utf8Encode(tuple0_0, realloc0, memory0);\n      var len1 = utf8EncodedLen;\n      dataView(memory0).setInt32(base + 4, len1, true);\n      dataView(memory0).setInt32(base + 0, ptr1, true);\n      var ptr2 = utf8Encode(tuple0_1, realloc0, memory0);\n      var len2 = utf8EncodedLen;\n      dataView(memory0).setInt32(base + 12, len2, true);\n      dataView(memory0).setInt32(base + 8, ptr2, true);\n    }\n    dataView(memory0).setInt32(arg0 + 4, len3, true);\n    dataView(memory0).setInt32(arg0 + 0, result3, true);\n  }\n  function trampoline37(arg0) {\n    const ret = getArguments();\n    var vec1 = ret;\n    var len1 = vec1.length;\n    var result1 = realloc0(0, 0, 4, len1 * 8);\n    for (let i = 0; i < vec1.length; i++) {\n      const e = vec1[i];\n      const base = result1 + i * 8;\n      var ptr0 = utf8Encode(e, realloc0, memory0);\n      var len0 = utf8EncodedLen;\n      dataView(memory0).setInt32(base + 4, len0, true);\n      dataView(memory0).setInt32(base + 0, ptr0, true);\n    }\n    dataView(memory0).setInt32(arg0 + 4, len1, true);\n    dataView(memory0).setInt32(arg0 + 0, result1, true);\n  }\n  function trampoline38(arg0) {\n    const ret = getTerminalStdin();\n    var variant1 = ret;\n    if (variant1 === null || variant1 === void 0) {\n      dataView(memory0).setInt8(arg0 + 0, 0, true);\n    } else {\n      const e = variant1;\n      dataView(memory0).setInt8(arg0 + 0, 1, true);\n      if (!(e instanceof TerminalInput2)) {\n        throw new Error('Resource error: Not a valid \"TerminalInput\" resource.');\n      }\n      var handle0 = handleCnt3++;\n      handleTable3.set(handle0, { rep: e, own: true });\n      dataView(memory0).setInt32(arg0 + 4, handle0, true);\n    }\n  }\n  function trampoline39(arg0) {\n    const ret = getTerminalStdout();\n    var variant1 = ret;\n    if (variant1 === null || variant1 === void 0) {\n      dataView(memory0).setInt8(arg0 + 0, 0, true);\n    } else {\n      const e = variant1;\n      dataView(memory0).setInt8(arg0 + 0, 1, true);\n      if (!(e instanceof TerminalOutput2)) {\n        throw new Error('Resource error: Not a valid \"TerminalOutput\" resource.');\n      }\n      var handle0 = handleCnt4++;\n      handleTable4.set(handle0, { rep: e, own: true });\n      dataView(memory0).setInt32(arg0 + 4, handle0, true);\n    }\n  }\n  function trampoline40(arg0) {\n    const ret = getTerminalStderr();\n    var variant1 = ret;\n    if (variant1 === null || variant1 === void 0) {\n      dataView(memory0).setInt8(arg0 + 0, 0, true);\n    } else {\n      const e = variant1;\n      dataView(memory0).setInt8(arg0 + 0, 1, true);\n      if (!(e instanceof TerminalOutput2)) {\n        throw new Error('Resource error: Not a valid \"TerminalOutput\" resource.');\n      }\n      var handle0 = handleCnt4++;\n      handleTable4.set(handle0, { rep: e, own: true });\n      dataView(memory0).setInt32(arg0 + 4, handle0, true);\n    }\n  }\n  let exports3;\n  function trampoline1(handle) {\n    const handleEntry = handleTable6.get(handle);\n    if (!handleEntry) {\n      throw new Error(`Resource error: Invalid handle ${handle}`);\n    }\n    handleTable6.delete(handle);\n    if (handleEntry.own && handleEntry.rep[symbolDispose]) {\n      handleEntry.rep[symbolDispose]();\n    }\n  }\n  function trampoline2(handle) {\n    const handleEntry = handleTable0.get(handle);\n    if (!handleEntry) {\n      throw new Error(`Resource error: Invalid handle ${handle}`);\n    }\n    handleTable0.delete(handle);\n    if (handleEntry.own && handleEntry.rep[symbolDispose]) {\n      handleEntry.rep[symbolDispose]();\n    }\n  }\n  function trampoline3(handle) {\n    const handleEntry = handleTable1.get(handle);\n    if (!handleEntry) {\n      throw new Error(`Resource error: Invalid handle ${handle}`);\n    }\n    handleTable1.delete(handle);\n    if (handleEntry.own && handleEntry.rep[symbolDispose]) {\n      handleEntry.rep[symbolDispose]();\n    }\n  }\n  function trampoline4(handle) {\n    const handleEntry = handleTable2.get(handle);\n    if (!handleEntry) {\n      throw new Error(`Resource error: Invalid handle ${handle}`);\n    }\n    handleTable2.delete(handle);\n    if (handleEntry.own && handleEntry.rep[symbolDispose]) {\n      handleEntry.rep[symbolDispose]();\n    }\n  }\n  function trampoline5(handle) {\n    const handleEntry = handleTable5.get(handle);\n    if (!handleEntry) {\n      throw new Error(`Resource error: Invalid handle ${handle}`);\n    }\n    handleTable5.delete(handle);\n    if (handleEntry.own && handleEntry.rep[symbolDispose]) {\n      handleEntry.rep[symbolDispose]();\n    }\n  }\n  function trampoline6(handle) {\n    const handleEntry = handleTable4.get(handle);\n    if (!handleEntry) {\n      throw new Error(`Resource error: Invalid handle ${handle}`);\n    }\n    handleTable4.delete(handle);\n    if (handleEntry.own && handleEntry.rep[symbolDispose]) {\n      handleEntry.rep[symbolDispose]();\n    }\n  }\n  function trampoline7(handle) {\n    const handleEntry = handleTable3.get(handle);\n    if (!handleEntry) {\n      throw new Error(`Resource error: Invalid handle ${handle}`);\n    }\n    handleTable3.delete(handle);\n    if (handleEntry.own && handleEntry.rep[symbolDispose]) {\n      handleEntry.rep[symbolDispose]();\n    }\n  }\n  ({ exports: exports0 } = instantiateCore(module2));\n  ({ exports: exports1 } = instantiateCore(module0, {\n    wasi_snapshot_preview1: {\n      args_get: exports0[\"29\"],\n      args_sizes_get: exports0[\"30\"],\n      clock_time_get: exports0[\"33\"],\n      environ_get: exports0[\"31\"],\n      environ_sizes_get: exports0[\"32\"],\n      fd_close: exports0[\"34\"],\n      fd_fdstat_get: exports0[\"35\"],\n      fd_fdstat_set_flags: exports0[\"36\"],\n      fd_prestat_dir_name: exports0[\"38\"],\n      fd_prestat_get: exports0[\"37\"],\n      fd_read: exports0[\"39\"],\n      fd_readdir: exports0[\"40\"],\n      fd_renumber: exports0[\"41\"],\n      fd_seek: exports0[\"42\"],\n      fd_write: exports0[\"43\"],\n      path_create_directory: exports0[\"44\"],\n      path_filestat_get: exports0[\"45\"],\n      path_open: exports0[\"46\"],\n      path_remove_directory: exports0[\"47\"],\n      path_unlink_file: exports0[\"48\"],\n      proc_exit: exports0[\"49\"]\n    }\n  }));\n  ({ exports: exports2 } = instantiateCore(module1, {\n    __main_module__: {\n      _start: exports1._start\n    },\n    env: {\n      memory: exports1.memory\n    },\n    \"wasi:cli/environment@0.2.0\": {\n      \"get-arguments\": exports0[\"25\"],\n      \"get-environment\": exports0[\"24\"]\n    },\n    \"wasi:cli/exit@0.2.0\": {\n      exit: trampoline9\n    },\n    \"wasi:cli/stderr@0.2.0\": {\n      \"get-stderr\": trampoline8\n    },\n    \"wasi:cli/stdin@0.2.0\": {\n      \"get-stdin\": trampoline10\n    },\n    \"wasi:cli/stdout@0.2.0\": {\n      \"get-stdout\": trampoline11\n    },\n    \"wasi:cli/terminal-input@0.2.0\": {\n      \"[resource-drop]terminal-input\": trampoline7\n    },\n    \"wasi:cli/terminal-output@0.2.0\": {\n      \"[resource-drop]terminal-output\": trampoline6\n    },\n    \"wasi:cli/terminal-stderr@0.2.0\": {\n      \"get-terminal-stderr\": exports0[\"28\"]\n    },\n    \"wasi:cli/terminal-stdin@0.2.0\": {\n      \"get-terminal-stdin\": exports0[\"26\"]\n    },\n    \"wasi:cli/terminal-stdout@0.2.0\": {\n      \"get-terminal-stdout\": exports0[\"27\"]\n    },\n    \"wasi:clocks/monotonic-clock@0.2.0\": {\n      now: trampoline0\n    },\n    \"wasi:clocks/wall-clock@0.2.0\": {\n      now: exports0[\"1\"]\n    },\n    \"wasi:filesystem/preopens@0.2.0\": {\n      \"get-directories\": exports0[\"0\"]\n    },\n    \"wasi:filesystem/types@0.2.0\": {\n      \"[method]descriptor.append-via-stream\": exports0[\"4\"],\n      \"[method]descriptor.create-directory-at\": exports0[\"8\"],\n      \"[method]descriptor.get-flags\": exports0[\"5\"],\n      \"[method]descriptor.get-type\": exports0[\"6\"],\n      \"[method]descriptor.metadata-hash\": exports0[\"14\"],\n      \"[method]descriptor.metadata-hash-at\": exports0[\"15\"],\n      \"[method]descriptor.open-at\": exports0[\"11\"],\n      \"[method]descriptor.read-directory\": exports0[\"7\"],\n      \"[method]descriptor.read-via-stream\": exports0[\"2\"],\n      \"[method]descriptor.remove-directory-at\": exports0[\"12\"],\n      \"[method]descriptor.stat\": exports0[\"9\"],\n      \"[method]descriptor.stat-at\": exports0[\"10\"],\n      \"[method]descriptor.unlink-file-at\": exports0[\"13\"],\n      \"[method]descriptor.write-via-stream\": exports0[\"3\"],\n      \"[method]directory-entry-stream.read-directory-entry\": exports0[\"16\"],\n      \"[resource-drop]descriptor\": trampoline5,\n      \"[resource-drop]directory-entry-stream\": trampoline1,\n      \"filesystem-error-code\": exports0[\"17\"]\n    },\n    \"wasi:io/error@0.2.0\": {\n      \"[resource-drop]error\": trampoline2\n    },\n    \"wasi:io/streams@0.2.0\": {\n      \"[method]input-stream.blocking-read\": exports0[\"19\"],\n      \"[method]input-stream.read\": exports0[\"18\"],\n      \"[method]output-stream.blocking-flush\": exports0[\"23\"],\n      \"[method]output-stream.blocking-write-and-flush\": exports0[\"22\"],\n      \"[method]output-stream.check-write\": exports0[\"20\"],\n      \"[method]output-stream.write\": exports0[\"21\"],\n      \"[resource-drop]input-stream\": trampoline3,\n      \"[resource-drop]output-stream\": trampoline4\n    }\n  }));\n  memory0 = exports1.memory;\n  realloc0 = exports2.cabi_import_realloc;\n  ({ exports: exports3 } = instantiateCore(module3, {\n    \"\": {\n      $imports: exports0.$imports,\n      \"0\": trampoline12,\n      \"1\": trampoline13,\n      \"10\": trampoline22,\n      \"11\": trampoline23,\n      \"12\": trampoline24,\n      \"13\": trampoline25,\n      \"14\": trampoline26,\n      \"15\": trampoline27,\n      \"16\": trampoline28,\n      \"17\": trampoline29,\n      \"18\": trampoline30,\n      \"19\": trampoline31,\n      \"2\": trampoline14,\n      \"20\": trampoline32,\n      \"21\": trampoline33,\n      \"22\": trampoline34,\n      \"23\": trampoline35,\n      \"24\": trampoline36,\n      \"25\": trampoline37,\n      \"26\": trampoline38,\n      \"27\": trampoline39,\n      \"28\": trampoline40,\n      \"29\": exports2.args_get,\n      \"3\": trampoline15,\n      \"30\": exports2.args_sizes_get,\n      \"31\": exports2.environ_get,\n      \"32\": exports2.environ_sizes_get,\n      \"33\": exports2.clock_time_get,\n      \"34\": exports2.fd_close,\n      \"35\": exports2.fd_fdstat_get,\n      \"36\": exports2.fd_fdstat_set_flags,\n      \"37\": exports2.fd_prestat_get,\n      \"38\": exports2.fd_prestat_dir_name,\n      \"39\": exports2.fd_read,\n      \"4\": trampoline16,\n      \"40\": exports2.fd_readdir,\n      \"41\": exports2.fd_renumber,\n      \"42\": exports2.fd_seek,\n      \"43\": exports2.fd_write,\n      \"44\": exports2.path_create_directory,\n      \"45\": exports2.path_filestat_get,\n      \"46\": exports2.path_open,\n      \"47\": exports2.path_remove_directory,\n      \"48\": exports2.path_unlink_file,\n      \"49\": exports2.proc_exit,\n      \"5\": trampoline17,\n      \"6\": trampoline18,\n      \"7\": trampoline19,\n      \"8\": trampoline20,\n      \"9\": trampoline21\n    }\n  }));\n  function run() {\n    const ret = exports2[\"wasi:cli/run@0.2.0#run\"]();\n    let variant0;\n    switch (ret) {\n      case 0: {\n        variant0 = {\n          tag: \"ok\",\n          val: void 0\n        };\n        break;\n      }\n      case 1: {\n        variant0 = {\n          tag: \"err\",\n          val: void 0\n        };\n        break;\n      }\n      default: {\n        throw new TypeError(\"invalid variant discriminant for expected\");\n      }\n    }\n    if (variant0.tag === \"err\") {\n      throw new ComponentError(variant0.val);\n    }\n    return variant0.val;\n  }\n  const handleTable0 = /* @__PURE__ */ new Map();\n  let handleCnt0 = 0;\n  const handleTable1 = /* @__PURE__ */ new Map();\n  let handleCnt1 = 0;\n  const handleTable2 = /* @__PURE__ */ new Map();\n  let handleCnt2 = 0;\n  const handleTable3 = /* @__PURE__ */ new Map();\n  let handleCnt3 = 0;\n  const handleTable4 = /* @__PURE__ */ new Map();\n  let handleCnt4 = 0;\n  const handleTable5 = /* @__PURE__ */ new Map();\n  let handleCnt5 = 0;\n  const handleTable6 = /* @__PURE__ */ new Map();\n  let handleCnt6 = 0;\n  const run0_2_0 = {\n    run\n  };\n  return { run: run0_2_0, \"wasi:cli/run@0.2.0\": run0_2_0 };\n}\n\n// lib/api.js\nvar yosys = new Application(() => __webpack_require__.e(/*! import() */ \"yowasp-yosys_npmjs_gen_resources-yosys_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./resources-yosys.js */ \"../yowasp-yosys/npmjs/gen/resources-yosys.js\")), instantiate, \"yowasp-yosys\");\nvar runYosys = yosys.run.bind(yosys);\nvar commands = { \"yosys\": runYosys };\n\n\n\n//# sourceURL=webpack://churchroad/../yowasp-yosys/npmjs/gen/bundle.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/async module */
/******/ 	(() => {
/******/ 		var webpackQueues = typeof Symbol === "function" ? Symbol("webpack queues") : "__webpack_queues__";
/******/ 		var webpackExports = typeof Symbol === "function" ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 		var webpackError = typeof Symbol === "function" ? Symbol("webpack error") : "__webpack_error__";
/******/ 		var resolveQueue = (queue) => {
/******/ 			if(queue && queue.d < 1) {
/******/ 				queue.d = 1;
/******/ 				queue.forEach((fn) => (fn.r--));
/******/ 				queue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));
/******/ 			}
/******/ 		}
/******/ 		var wrapDeps = (deps) => (deps.map((dep) => {
/******/ 			if(dep !== null && typeof dep === "object") {
/******/ 				if(dep[webpackQueues]) return dep;
/******/ 				if(dep.then) {
/******/ 					var queue = [];
/******/ 					queue.d = 0;
/******/ 					dep.then((r) => {
/******/ 						obj[webpackExports] = r;
/******/ 						resolveQueue(queue);
/******/ 					}, (e) => {
/******/ 						obj[webpackError] = e;
/******/ 						resolveQueue(queue);
/******/ 					});
/******/ 					var obj = {};
/******/ 					obj[webpackQueues] = (fn) => (fn(queue));
/******/ 					return obj;
/******/ 				}
/******/ 			}
/******/ 			var ret = {};
/******/ 			ret[webpackQueues] = x => {};
/******/ 			ret[webpackExports] = dep;
/******/ 			return ret;
/******/ 		}));
/******/ 		__webpack_require__.a = (module, body, hasAwait) => {
/******/ 			var queue;
/******/ 			hasAwait && ((queue = []).d = -1);
/******/ 			var depQueues = new Set();
/******/ 			var exports = module.exports;
/******/ 			var currentDeps;
/******/ 			var outerResolve;
/******/ 			var reject;
/******/ 			var promise = new Promise((resolve, rej) => {
/******/ 				reject = rej;
/******/ 				outerResolve = resolve;
/******/ 			});
/******/ 			promise[webpackExports] = exports;
/******/ 			promise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise["catch"](x => {}));
/******/ 			module.exports = promise;
/******/ 			body((deps) => {
/******/ 				currentDeps = wrapDeps(deps);
/******/ 				var fn;
/******/ 				var getResult = () => (currentDeps.map((d) => {
/******/ 					if(d[webpackError]) throw d[webpackError];
/******/ 					return d[webpackExports];
/******/ 				}))
/******/ 				var promise = new Promise((resolve) => {
/******/ 					fn = () => (resolve(getResult));
/******/ 					fn.r = 0;
/******/ 					var fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));
/******/ 					currentDeps.map((dep) => (dep[webpackQueues](fnQueue)));
/******/ 				});
/******/ 				return fn.r ? promise : getResult();
/******/ 			}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));
/******/ 			queue && queue.d < 0 && (queue.d = 0);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".churchroad.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/importScripts chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = self.location + "";
/******/ 		
/******/ 		// object to store loaded chunks
/******/ 		// "1" means "already loaded"
/******/ 		var installedChunks = {
/******/ 			"src_worker_js": 1
/******/ 		};
/******/ 		
/******/ 		// importScripts chunk loading
/******/ 		var installChunk = (data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			while(chunkIds.length)
/******/ 				installedChunks[chunkIds.pop()] = 1;
/******/ 			parentChunkLoadingFunction(data);
/******/ 		};
/******/ 		__webpack_require__.f.i = (chunkId, promises) => {
/******/ 			// "1" is the signal for "already loaded"
/******/ 			if(!installedChunks[chunkId]) {
/******/ 				if(true) { // all chunks have JS
/******/ 					importScripts(__webpack_require__.p + __webpack_require__.u(chunkId));
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkchurchroad"] = self["webpackChunkchurchroad"] || [];
/******/ 		var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);
/******/ 		chunkLoadingGlobal.push = installChunk;
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/worker.js");
/******/ 	churchroad = __webpack_exports__;
/******/ 	
/******/ })()
;